Distributed Processes: A Concurrent Programming Concept
A language concept for concurrent processes
without common variables is introduced.  These
processes communicate and synchronize by means of procedure
calls and guarded regions.  This concept
is proposed for real-time applications controlled by
microcomputer networks with distributed storage.
The paper gives several examples of distributed processes
and shows that they include procedures, coroutines,
classes, monitors, processes, semaphores, buffers, path
expressions, and input/output as special cases.
CACM November, 1978
Hansen, P.
Concurrent programming, distributed processes,
microprocessor networks, nondeterminism, guarded
regions, programming languages, process communication
and scheduling, sorting arrays, coroutines, classes,
monitors, processes, semaphores, buffers, path expressions, input/output
3.8 4.2 4.22 4.32 5.24
CA781108 DH January 26, 1979  10:40 AM
